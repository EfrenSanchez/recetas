{"version":3,"sources":["mealdb-api.js","pages/Home.js","components/RecipeIngredients.js","components/RecipeInstructions.js","pages/Recipe.js","pages/Timer.js","components/IfOffline.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","mealdb_api","getLatest","getRecipe","_callee","request","data","recipes","regenerator_default","a","wrap","_context","prev","next","fetch","concat","sent","json","meals","map","m","normalizeMeal","abrupt","stop","_callee2","recipeId","recipe","_context2","shift","meal","newMeal","id","idMeal","name","strMeal","category","strCategory","origin","strArea","instructions","strInstructions","split","filter","i","trim","thumbnail","strMealThumb","tags","strTags","youtube","strYoutube","ingredients","url","strSource","dateModified","push","ingredient","measure","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","mealdb","console","error","t0","setState","_this$state","react_default","createElement","className","Helmet","Link","to","key","style","backgroundImage","React","Component","RecipeIngredients","ix","RecipeInstructions","line","Recipe","match","params","components_RecipeIngredients","components_RecipeInstructions","Timer","start","asyncToGenerator","mark","timer","countdownInterval","window","navigator","alert","Notification","permission","requestPermission","timeLeft","setInterval","clearInterval","showNotification","registration","serviceWorker","getRegistration","body","img","handleChange","e","target","value","type","min","max","step","onChange","onClick","IfOffline","goOnline","onLine","goOffline","addEventListener","removeEventListener","children","App","BrowserRouter","components_IfOffline","Route","exact","path","component","isLocalhost","Boolean","location","hostname","register","config","URL","process","href","swUrl","then","response","contentType","headers","get","status","indexOf","ready","unregister","reload","registerValidSW","catch","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.aa31bca6.chunk.js","sourcesContent":["import 'isomorphic-fetch';\n\n//API URL\nconst baseUrl = 'https://www.themealdb.com/api/json/v1/1'\n\nexport default {\n  getLatest,\n  getRecipe\n}\n\nasync function getLatest() {\n  const request = await fetch(`${baseUrl}/latest.php`)\n  const data = await request.json()\n  const recipes = data.meals.map((m) => normalizeMeal(m))\n\n  return recipes\n}\n\nasync function getRecipe(recipeId) {\n  const request = await fetch(`${baseUrl}/lookup.php?i=${recipeId}`)\n  const data = await request.json()\n  if( ! data.meals ) return null\n  const recipe = normalizeMeal(data.meals.shift())\n\n  return recipe\n}\n\nfunction normalizeMeal(meal) {\n  const newMeal = {}\n\n  newMeal.id = meal.idMeal\n  newMeal.name = meal.strMeal\n  newMeal.category = meal.strCategory\n  newMeal.origin = meal.strArea\n  newMeal.instructions = meal.strInstructions.split('\\n').filter((i) => i.trim() !== '')\n  newMeal.thumbnail = meal.strMealThumb\n  newMeal.tags = meal.strTags ? meal.strTags.split(',') : []\n  newMeal.youtube = meal.strYoutube\n  newMeal.ingredients = []\n  newMeal.url = meal.strSource\n  newMeal.dateModified = meal.dateModified\n\n  for( let i=1; i<=20; i++ ) {\n    if( meal[`strIngredient${i}`] !== '' && meal[`strMeasure${i}`] !== '' ) {\n      newMeal.ingredients.push({\n        ingredient: meal[`strIngredient${i}`],\n        measure: meal[`strMeasure${i}`]\n      })\n    }\n  }\n\n  return newMeal\n}\n","//Dependencies\nimport React from 'react'\nimport { Link } from \"react-router-dom\"\nimport { Helmet } from 'react-helmet'\n\n//API\nimport mealdb from '../mealdb-api'\n\nclass Home extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { recipes: null, isLoading: true }\n  }\n\n  async componentDidMount() {\n    let recipes\n    try {\n      recipes = await mealdb.getLatest()\n    } catch(e) { console.error(e); recipes = null }\n    this.setState({ recipes, isLoading: false })\n  }\n\n  render() {\n    const { recipes, isLoading } = this.state\n\n    if( isLoading ) {\n      return <div className=\"message\">Cargando...</div>\n    }\n\n    return <div>\n      <Helmet>\n        <title>Recetas</title>\n      </Helmet>\n\n      <div className=\"recipes\">\n        { recipes && recipes.map((recipe) => (\n          <Link to={`/recipe/${recipe.id}`} className=\"recipe\" key={recipe.id}>\n            <span className=\"bg\" style={ { backgroundImage: `url(${recipe.thumbnail})` } }></span>\n            <span className=\"info\">\n              <h2>{ recipe.name }</h2>\n            </span>\n          </Link>\n        )) }\n      </div>\n    </div>\n  }\n\n}\n\nexport default Home;","import React from 'react'\n\nclass RecipeIngredients extends React.Component  {\nrender() {\n  const { ingredients } = this.props\n\n  return <div className=\"ingredients\">\n    <h2>Ingredients</h2>\n    <ul>\n      { \n        ingredients.map((i, ix) => (\n          <li key={ix}>{ i.ingredient }: { i.measure }</li>\n        ))\n      }\n    </ul>\n  </div>\n  }\n}\n\nexport default RecipeIngredients;","import React from 'react'\n\nclass RecipeInstructions extends React.Component {\n  render() {\n    const { instructions } = this.props\n    \n    return <div className=\"instructions\">\n      <h2>Instructions</h2>\n  \n      <div className=\"steps\">\n        { instructions.map((line, ix) => (\n          <div className=\"step\" key={ix}>\n            <div className=\"number\">{ix+1}</div>\n            <div className=\"text\">{ line }</div>\n          </div>\n        )) }\n      </div>\n    </div>\n  }\n}\n\n\n\nexport default RecipeInstructions;","//Dependencies\nimport React from 'react';\nimport { Helmet } from 'react-helmet'\n\n//API\nimport mealdb from '../mealdb-api'\n\n//Components\nimport RecipeIngredients from '../components/RecipeIngredients'\nimport RecipeInstructions from '../components/RecipeInstructions'\n\nclass Recipe extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { recipe: null, isLoading: true }\n  }\n\n  async componentDidMount() {\n    var recipe = null\n    try {\n      recipe = await mealdb.getRecipe(this.props.match.params.recipeId)\n    } catch(e) {\n      recipe = null\n    }\n    this.setState({ recipe, isLoading: false })\n  }\n\n  render() {\n    const { recipe, isLoading } = this.state\n\n    if( isLoading ) {\n      return <div className=\"message\">Loading...</div>\n    }\n    else if( recipe === null ) {\n      return <div className=\"message\">Something was wrong :(</div>\n    }\n\n    return <div className=\"Recipe\">\n      <Helmet>\n        <title>{ recipe.name }</title>\n      </Helmet>\n\n      <div className=\"hero\" style={{ backgroundImage: `url(${recipe.thumbnail})` }} />\n      \n      <div className=\"title\">\n        <div className=\"info\">\n          <h1>{ recipe.name }</h1>\n          <p>{ recipe.origin }</p>\n        </div>\n        <div>\n        </div>\n      </div>\n\n\n      <RecipeIngredients ingredients={ recipe.ingredients } />\n\n      <RecipeInstructions instructions={ recipe.instructions } />\n\n    </div>\n  }\n\n}\n\nexport default Recipe;","//Dependencies\nimport React from 'react'\n\nclass Timer extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { timer: 3, timeLeft: 0 }\n  }\n\n  start = async () => {\n    \n    if( ! ('Notification' in window) || ! ('serviceWorker' in navigator) ) {\n      return alert('Your browaser does not suport notifications')\n    }\n\n    if( Notification.permission === 'default' ) {\n      await Notification.requestPermission()\n    }\n\n    let timer = this.state.timer\n    this.setState({ timeLeft: timer })\n\n    let countdownInterval = setInterval(() => {\n      timer = timer - 1;\n      this.setState({ timeLeft: timer }) \n      if( timer <= 0 ) { \n        clearInterval(countdownInterval) \n        this.showNotification()\n      }\n    }, 1000)\n  }\n\n  showNotification = async () => {\n    const registration = await navigator.serviceWorker.getRegistration()\n    if( ! registration ) return alert(\"No Service Worker :(\")\n\n    registration.showNotification(\"Timer ready!\", {\n      body: 'Ding ding ding',\n      img: '/icon.png'\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState({timer: e.target.value})\n  }\n\n  render () {\n    const { timer, timeLeft } = this.state\n\n    return <div className=\"Timer\">\n      <div className=\"name\">Timer</div>\n      { timeLeft === 0 ? \n        <div className=\"center\">\n          <input type=\"number\" min=\"0\" max=\"999\" step=\"1\" value={timer} onChange={this.handleChange} />\n          <button onClick={ this.start }>Start</button>\n        </div>\n      :\n        <div className=\"timeLeft\">{ timeLeft }s</div>\n      }\n    </div>\n  }\n}\n\nexport default Timer;","import React from 'react'\n\nclass IfOffline extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { onLine: navigator ? navigator.onLine : true }\n  }\n\n  componentDidMount() {\n    if( ! window ) return\n    window.addEventListener('online', this.goOnline)\n    window.addEventListener('offline', this.goOffline)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('online', this.goOnline)\n    window.removeEventListener('offline', this.goOffline)\n  }\n\n  goOnline = () => this.setState({ onLine: true })\n\n  goOffline = () => this.setState({ onLine: false })\n\n  render() {\n    const { children } = this.props\n    const { onLine } = this.state\n\n    if( onLine ) { return null }\n    \n    return <span>{ children }</span>\n  }\n\n}\n\nexport default IfOffline;","//Dependencies\nimport React from 'react'\nimport { BrowserRouter, Route, Link } from \"react-router-dom\"\n\n//Pages\nimport Home from './pages/Home'\nimport Recipe from './pages/Recipe'\nimport Timer from './pages/Timer'\n\n//Componets\nimport IfOffline from './components/IfOffline'\n\n//Styles\nimport './App.css'\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n        <header>\n            <Link to=\"/\">Recetas <IfOffline>Offline</IfOffline></Link>\n            <Link to=\"/timer\" className=\"timerLink\">⏱</Link>\n          </header>\n\n          <main>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/recipe/:recipeId\" component={Recipe} />\n            <Route path=\"/timer\" component={Timer} />\n          </main>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker();\n"],"sourceRoot":""}